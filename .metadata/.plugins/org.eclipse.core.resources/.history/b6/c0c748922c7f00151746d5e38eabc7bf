-----------------------
Section 2 Introduction
-----------------------
[3] - "Unit Testing Introduction"
 
	Unit Testing: 
		Testing at the class level. Test all the public methods on a class. Testing positive and exception options.
		Assures quality.
		Runs very fast.
		Regression Suite. We ensure that any other changes made by another Dev will not break your code.
		
	J2EE flow:
		OrderProcessor -> OrderService -> OrderDAO -> DB
		We wont be testing all the way down the line with unit tests, we will test each class individually.
		We can use Mocks to do this.

--------------------------
Section 3 JUnit in Action
--------------------------
[4] - "Useless 24s video..."

[5]	- "JUnit Introduction"
	
	API: JUnit 4
		Uses Annotations
			@Test
			@Before - ran BEFORE EACH test method
			@After - ran AFTER EACH test method
			@BeforeClass - ran only ONCE BEFORE the tests
			@Ignore - ignores the test
			
			
	Assert results:
		assertNotNull()
		assertNull()
		assertTrue()
		assertEquals()
		assertSame()
		etc..
	
		
	Run and Report results:
		BlockJunit4ClassRunner.class
		@RunWith(SpringJUnit4ClassRunner.class)
	
	
[6] - "Hello JUnit"

	@Test
	assertNotNull(); assertEquals()


[7] - "Testing for Exceptions"

	@Test(expected = IllegalArgumentException.class)
	

[8] - "@Before and @After"


--------------------------
Section 4
--------------------------